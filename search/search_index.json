{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"AutoBlend \u2013 Easily blend objects in your scene","text":"<p>Get it here</p>"},{"location":"#overview","title":"Overview","text":"<p>AutoBlend blends meshes seamlessly into their surroundings using a post process pass and a small material graph change. It will automatically compute blend IDs for meshes, but you can override them per material or per object if needed. Unlike Runtime Virtual Texturing (RVT), Pixel Depth Offset (PDO), and other meshblend techniques, this effect works on any number of meshes at any position - not just where two surfaces meet.</p> <ul> <li>Flexible placement: Works anywhere in the scene, not only at terrain or surface-level intersections.</li> <li>No extra prep: No mesh vertex painting, RVT setup, or additional UVs/vertex data needed.</li> <li>Scales well: Adds very little overhead, so it works efficiently even with thousands of meshes.</li> <li>No compile-time changes: Drop it into existing materials without rebuilding shaders or the project.</li> </ul>"},{"location":"#setup","title":"Setup","text":"1. Installation2. Add the post process effect3. Hook up the Blend ID function <ol> <li>Click the AutoBlend button in the Unreal Editor toolbar to open the plugin window.</li> <li>Install the plugin by clicking the Install button.</li> <li>Click Recompile Shaders - this may take a few minutes.</li> <li>In your project console, run the command <code>r.Lumen.ScreenProbeGather.MaterialAO 0</code>.</li> </ol> <p>Note: This is necessary to fix some visual artifacts.</p> <ol> <li>Add a Post Process Volume to your level.</li> <li>Add the <code>M_PostProcess_AutoBlend</code> material under Rendering Features \u2192 Post Process Materials.</li> <li>(Optional) Enable Infinite Extent (Unbound) to apply the effect everywhere. </li> </ol> <ol> <li>Open your mesh base material.</li> <li>Add the <code>MF_BlendID</code> material function node.</li> <li>Connect its output to Ambient Occlusion to enable blending.</li> <li>Repeat for all materials you want to blend. </li> </ol> <p>Note: We can multiply <code>AO</code> with <code>Base Color</code> to include ambient occlusion in the final output.</p>"},{"location":"#usage","title":"Usage","text":"<p>AutoBlend automatically computes a blend ID for every mesh with the material function applied. The blend ID determines which objects blend with each other. Objects with the same blend ID won't blend, while objects with different blend IDs blend together. You can manually override the blend ID:</p> <ul> <li>Per Material Override: Set the Blend ID scalar parameter in the material instance (affects all meshes using that material).</li> <li>Per Object Override: Set Custom Primitive Data [0] in the mesh instance settings for per-instance control.  <p>Note: You can set blend values in the range of <code>0-254</code>. Set a blend ID of <code>255</code> to disable blending for an object/material that has blending enabled.</p> </li> </ul> <p></p>"},{"location":"changelog/","title":"Changelog","text":"<p>Get it here</p>"},{"location":"changelog/#version-5","title":"Version 5","text":"<p>September 7 2025</p> <ul> <li>Fix shader material not showing up on Unreal Engine 5.1-5.5.</li> </ul>"},{"location":"changelog/#version-4","title":"Version 4","text":"<p>September 2 2025</p> <ul> <li>Fix exposure in post process shader.</li> <li>Debug view can be faded in/out to blend with the default view.</li> </ul>"},{"location":"changelog/#version-3","title":"Version 3","text":"<p>August 27 2025</p> <ul> <li>Unreal Engine <code>5.1</code>-<code>5.6</code> support.</li> <li>Fixed a small issue with symbols not rendering correctly in the popup on Windows.</li> </ul>"},{"location":"changelog/#version-2","title":"Version 2","text":"<p>August 25 2025</p> <ul> <li>Performance improvements.</li> </ul>"},{"location":"changelog/#version-1","title":"Version 1","text":"<p>August 20 2025</p> <p>First version of AutoBlend.</p> <ul> <li>Post process shader for blending objects.</li> <li>Material functions for sending custom object ID's.</li> <li>Toolbar window for installation and tutorial.</li> <li>Windows, Mac, Linux support.</li> <li>Unreal Engine 5.6 support.</li> </ul>"},{"location":"contact/","title":"Contact","text":"<p>Feel free to contact me any time with questions, suggestions, or feedback:</p> <ul> <li>Discord: Send a DM to @bergice</li> <li>Reddit: /u/bergice</li> <li>Disputes: Fab Support</li> </ul>"},{"location":"faq/","title":"Frequently Asked Questions (FAQ)","text":""},{"location":"faq/#how-performant-is-it","title":"How performant is it?","text":"<p>Performance varies depending on factors such as:</p> <ul> <li>computer specs and resource capacity</li> <li>resolution</li> <li>shader settings</li> <li>how much of the screen is covered by blended seams.</li> </ul> <p>I'll be preparing a demo soon so you can test it out on your own machine. The goal is to keep render overhead &lt;<code>1ms</code> on modern hardware in most scenarios.</p> <p>Check out the performance and benchmarking details here.</p>"},{"location":"faq/#which-unreal-engine-versions-are-supported","title":"Which Unreal Engine versions are supported?","text":"<p>Unreal Engine <code>5.1</code>-<code>5.6</code>. If there's demand I may add <code>4.x</code> support as well.</p>"},{"location":"faq/#which-render-modes-are-supported","title":"Which render modes are supported?","text":"<p>Only deferred rendering is supported due to the requirement for a GBuffer channel. Static lighting is not supported.</p>"},{"location":"faq/#why-is-the-material-ambient-occlusion-channel-used","title":"Why is the Material Ambient Occlusion channel used?","text":"<p>It's the only buffer suitable for custom effects without modifying the engine. You can work around this by multiplying AO with Base Color instead. </p>"},{"location":"faq/#why-is-there-no-discord-server-demo-video-available-are-you-trustworthy","title":"Why is there no Discord server, demo, video available? Are you trustworthy?","text":"<p>AutoBlend is a plugin I made for myself for a personal project, and I want to share it with the community. The first version was developed and released in a week. I'll be releasing new updates to improve the product as I further develop it. I'm also planning on releasing a demo so you can try the effect yourself and performance test it on your own hardware before buying.</p> <p>As for credibility, I am a professional computer programmer with over a decade of experience. I started using Unreal Engine recently, but am quickly familiarising myself with it as I have a lot of experience with game development. You can check out my LinkedIn profile here.</p>"},{"location":"features/","title":"Features / Roadmap","text":"<ul> <li>\u2705 Post process blend effect</li> <li>\u2705 Automatic blend ID's</li> <li>\u2705 Manual blend ID's</li> <li>\u2705 Unreal Engine 5.6 support</li> <li>\u2705 Windows, Mac, Linux support</li> <li>\u2705 Performance improvements</li> <li>\u2705 Unreal Engine 5.1-5.5 support</li> <li>\u2610 Unreal Engine 4.x support</li> <li>\u2610 Improve blend artifacts where lights and shadows meet near seams</li> <li>\u2610 More natural blending and noise blending</li> <li>\u2610 Normal / angle factor blending</li> <li>\u2610 Varying blend sizes</li> <li>\u2610 Downsampled render pass for performance</li> <li>\u2610 Separate blend GBuffer channels</li> </ul>"},{"location":"performance/","title":"Performance","text":"<p>Performance varies depending on factors such as:</p> <ul> <li>computer specs and resource capacity</li> <li>resolution</li> <li>shader settings</li> <li>how much of the screen is covered by blended seams.</li> </ul> <p>I'll be preparing a demo soon so you can test it out on your own machine. The goal is to keep render overhead &lt;<code>1ms</code> on modern hardware in most scenarios.</p>"},{"location":"performance/#time-complexity","title":"Time Complexity","text":"<p>Most of the compute time happens in the post process shader which calculates blending per pixel. Each pixel needs to sample nearby pixels to detect seams. If a seam is found, blending is calculated.</p> <p>Cost scales linearly with the number of ray directions and logarithmically with the search radius. The refinement stage adds a small fixed cost.</p> <ul> <li>Directions (NumDirs): doubles cost if doubled.</li> <li>Radius (MaxRadius): increases cost slowly (~<code>log2(MaxRadius)</code>).</li> <li>Refinement steps (BinaryRefineIters): small linear add.</li> </ul> <p>Example</p> <p>(<code>NumDirs</code>=<code>8</code>, <code>MaxRadius</code>=<code>64</code>, <code>BinaryRefineIters</code>=<code>4</code>) yield on the order of ~<code>80</code> samples (~<code>160</code> texture reads) per pixel in worst-case seam regions; most pixels do less work due to early exit.</p>"},{"location":"performance/#benchmarks","title":"Benchmarks","text":"<p>Coming soon.</p>"},{"location":"troubleshooting/","title":"Troubleshooting","text":"<p>Here are some common issues and solutions in case you run into problems with getting the blending working.</p>"},{"location":"troubleshooting/#blending-is-not-visible","title":"Blending is not visible","text":"<ul> <li>          Make sure you went through the installation steps correctly.        </li> <li>          Ensure you have an active post process volume with the blend material added.         It's a good idea to make it unbound (infinite).        </li> <li>          Double-check your materials have the blend material function hooked up.        </li> <li>          Open your editor viewport and enable <code>Buffer Visualization</code> &gt; <code>Material Ambient Occlusion</code>.         If the screen is white it means the AO channel is not being written to, and blending won't work.         This could be due to static lighting / forward rendering being enabled.         It could also indicate you haven't set up the material function correctly.         Make sure you're not viewing <code>Ambient Occlusion</code> since that's a separate unrelated buffer.        </li> <li>          Turn off Static Lighting, it is not supported.        </li> <li>          Ensure <code>Deferred Rendering</code> is enabled. <code>Forward Rendering</code> is not supported.        </li> </ul> Check all Reset"},{"location":"troubleshooting/#color-artifacts","title":"Color artifacts","text":"<p>If you notice color artifacts such as models having different brightness levels or shadows being too dark, you probably haven't installed the shader patch.</p> <p>Make sure to install the shader patch as described in the installation steps and recompile shaders afterwards.</p>"},{"location":"troubleshooting/#blending-ghosting-occurs-on-objects-that-shouldnt-be-blended","title":"Blending / ghosting occurs on objects that shouldn't be blended","text":"<p>Make sure to unplug the material AO pin for objects that shouldn't be blended, otherwise you may notice blurring / ghosting / out of focus effects on those objects. This is due to the material AO being read by the blend effect and mistakenly interprets it as edges across the surface of your object.</p> <p>You can confirm this by enabling <code>DebugView</code> in the autoblend material instance - it should show random colors across the surface of your object.</p>"},{"location":"blog/","title":"News","text":""},{"location":"blog/2025/09/22/brightness-issue-fix/","title":"Brightness issue fix","text":"<p>Some users recently reported issues where brightness of blended objects would fluctuate. To resolve this, run this command in your project console: <code>r.Lumen.ScreenProbeGather.MaterialAO 0</code></p> <p>The setup guide has been updated to include this step.</p>"},{"location":"blog/2025/08/20/autoblend-is-now-available-on-the-unreal-engine-fab-marketplace-/","title":"AutoBlend is now available on the Unreal Engine Fab marketplace! \ud83d\ude80","text":"<p>Complex blending between objects in Unreal Engine is now easier than ever with AutoBlend. This plugin allows you to blend objects seamlessly using a post-process effect, without the need for complex material setups or manual adjustments.</p> <p>I'll be taking all feedback, criticism, compliments, hate mail, snail mail, morse code and smoke signals from the community! If you have any problems or suggestions, please let me know and I'll incorporate it into the next version.</p> <p>You can get plugin on the Unreal Engine Fab marketplace.</p>"},{"location":"blog/2025/08/24/performance-improvements-and-downgrade/","title":"Performance improvements and downgrade","text":"<p>I'm working on a patch that will improve performance by a lot after some users have reported slowness.</p> <p>Additionally, some people have requested a backport to Unreal Engine <code>5.1</code>-<code>5.5</code> as well as some <code>4.x</code> versions. For now I'll be focusing on <code>5.x</code> only, if I get extra time and it's not too complicated I'll add <code>4.x</code> support as well.</p> <p>You can check out the full roadmap here.</p> <p>Should be ready soon!</p>"},{"location":"blog/2025/08/25/version-2-is-out-bringing-performance-improvements/","title":"Version 2 is out, bringing performance improvements!","text":"<p>Performance improvements are out. The shader should now be a lot faster thanks to an optimized edge detection algorithm.</p> <p>Read the Performance page for more details.</p> <p>I'll be downgrading the minimum supported Unreal Engine version to <code>5.1</code> next.</p> <p>You can get plugin on the Unreal Engine Fab marketplace.</p>"},{"location":"blog/2025/08/27/version-3-is-out-unreal-engine-51-56-support/","title":"Version 3 is out, Unreal Engine 5.1-5.6 support!","text":"<p>The plugin now supports Unreal Engine <code>5.1</code>-<code>5.6</code>! Also fixed a small issue with Windows not rendering symbols correctly in the popup.</p> <p>You can get plugin on the Unreal Engine Fab marketplace.</p>"},{"location":"blog/2025/09/02/version-4-is-out-exposure-fix-and-debug-view-blending/","title":"Version 4 is out, exposure fix and debug view blending!","text":"<p>Previously the shader would brighten the image slightly due to not taking exposure into account. This is now fixed.</p> <p>Additionally you can now fade in the debug view, making it easier to see what is being blended.</p> <p>You can get plugin on the Unreal Engine Fab marketplace.</p>"},{"location":"blog/2025/09/07/version-5-is-out-backwards-compatibility-fix/","title":"Version 5 is out, backwards compatibility fix!","text":"<p>Version 4 accidentally broke backwards compatibility with Unreal Engine 5.1-5.5. If you had issues with the shader material not showing up, please update to this version.</p> <p>You can get plugin on the Unreal Engine Fab marketplace.</p>"},{"location":"blog/archive/2025/","title":"2025","text":""}]}